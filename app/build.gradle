apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

android {

    def STRING = 'String'
    def STRING_RES = 'string'


    compileSdkVersion 27
    defaultConfig {
        applicationId "it.marcosignoretto.themoviedbbrowser"

        minSdkVersion 19
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        manifestPlaceholders = [
                orientationConfig : "sensorPortrait",
                configChanges     : "orientation|screenSize",
                resizeableActivity: "false"
        ]

        buildConfigField STRING, 'APP_NAME', '"TheMovieDbBrowser"'
        resValue STRING_RES, 'app_name', 'TheMovieDbBrowser'
    }

    dexOptions {
        javaMaxHeapSize "4g"
    }

    signingConfigs {
        release {
            Properties localProps = new Properties()
            File localPropsFile = file('../signature/keystore.properties')
            if (localPropsFile.exists()) {
                localProps.load(new FileInputStream(localPropsFile))
            }
            storeFile file('../signature/TheMovieDbBrowser.jks')
            storePassword localProps['keystore.password']
            keyAlias localProps['keystore.alias']
            keyPassword localProps['keystore.alias.password']
        }
    }

    buildTypes {

        debug {
            debuggable true
            shrinkResources false
            minifyEnabled false
        }
        release {
            debuggable false
            minifyEnabled true
            shrinkResources true

            proguardFiles getDefaultProguardFile('proguard-android.txt'),
                    'proguard-rules.pro',
                    'proguard-rules-gson.pro',
                    'proguard-rules-fresco.pro',
                    'proguard-rules-retrofit.pro',
                    'proguard-rules-rxjava.pro',
                    'proguard-rules-rxjava-retrofit.pro'

            signingConfig signingConfigs.release
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"

    // ===== UI ===========
    implementation "com.android.support:appcompat-v7:$android_support_version"
    implementation "com.android.support:cardview-v7:$android_support_version"
    implementation "com.facebook.fresco:fresco:$fresco_version"
    implementation "com.wdullaer:materialdatetimepicker:$materialdatepicker_version"

    // ===== DAGGER =======
    implementation "com.google.dagger:dagger:$dagger_version"
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation 'com.android.support:design:27.0.2'
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    compileOnly 'javax.annotation:jsr250-api:1.0'

    // ===== Retrofit2 =======
    implementation "com.google.code.gson:gson:$gson_version"
    implementation "com.squareup.retrofit2:retrofit:$retrofit2_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit2_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit2_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp3_version"

    // Reactive
    implementation "io.reactivex.rxjava2:rxandroid:$rx_android_version"
    implementation "io.reactivex.rxjava2:rxkotlin:$rx_kotlin_version"

    // ===== TESTING ========
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
}
